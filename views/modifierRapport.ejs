<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Modifier <%= reportData.title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <style>
        /* Edit-specific styles */
        .editable-section {
            padding: 0.5rem;
            border: 1px dashed #0d6efd;
            border-radius: 0.25rem;
            background-color: #f8f9fa;
            cursor: text;
        }
        .editable-section:focus {
            outline: 2px solid #0d6efd;
            background-color: white;
        }
        .edit-buttons {
            position: sticky;
            top: 20px;
            z-index: 1000;
            background: white;
            padding: 10px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .editable-value {
            display: inline-block;
            min-width: 30px;
        }
    </style>
</head>
<body class="container mt-4">
    <!-- Edit Header -->
    <div class="report-header">
        <h1 contenteditable="true" class="editable-section" data-field="title"><%= reportData.title %></h1>
        <p>Dernière modification: <%= formatDate(new Date()) %></p>
    </div>

    <!-- Edit Mode Actions -->
    <div class="edit-buttons no-print">
        <button class="btn btn-success" id="saveReportBtn">
            <i class="bi bi-check-lg"></i> Sauvegarder
        </button>
        <a href="/reports" class="btn btn-danger">
            <i class="bi bi-x-lg"></i> Annuler
        </a>
    </div>

    <!-- Editable Content -->
    <div id="editableContent">
        <% reportData.sections.forEach((section, sectionIndex) => { %>
            <div class="mb-5">
                <div class="section-header">
                    <h3 class="editable-section" 
                        data-field="sections[<%= sectionIndex %>].title"
                        contenteditable="true"><%= section.title %></h3>
                </div>

                <% if (section.summary) { %>
                    <div class="card summary-card mb-4">
                        <div class="card-header">Résumé</div>
                        <div class="card-body">
                            <div class="row">
                                <% Object.keys(section.summary).forEach(key => { %>
                                    <div class="col-md-3 mb-3">
                                        <div class="editable-section">
                                            <span class="fw-bold"><%= key %>:</span>
                                            <span class="text-primary editable-value" 
                                                  contenteditable="true"
                                                  data-field="sections[<%= sectionIndex %>].summary.<%= key %>"
                                                  data-type="number"><%= section.summary[key] %></span>
                                        </div>
                                    </div>
                                <% }); %>
                            </div>
                        </div>
                    </div>
                <% } %>

                <% if (section.details?.length > 0) { %>
                    <div class="card">
                        <div class="card-header">Détails</div>
                        <div class="card-body table-container">
                            <table class="table table-striped table-hover">
                                <thead class="table-primary">
                                    <tr>
                                        <% Object.keys(section.details[0])
                                            .filter(k => !['id','Description'].includes(k))
                                            .forEach(header => { %>
                                            <th><%= header %></th>
                                        <% }); %>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% section.details.forEach((detail, detailIndex) => { %>
                                        <tr>
                                            <% Object.entries(detail)
                                                .filter(([k]) => !['id','Description'].includes(k))
                                                .forEach(([key, value]) => { %>
                                                <td class="editable-section" 
                                                    data-field="sections[<%= sectionIndex %>].details[<%= detailIndex %>].<%= key %>"
                                                    contenteditable="true">
                                                    <%= value %>
                                                </td>
                                            <% }); %>
                                        </tr>
                                    <% }); %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                <% } %>
            </div>
        <% }); %>
    </div>

    <!-- Hidden Save Form -->
    <form id="saveForm" action="/reports/save" method="POST">
        <input type="hidden" name="editedReport" id="editedReportInput">
    </form>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
    // Initialise le rapport avec les données du serveur
    let reportData = <%- JSON.stringify(reportData) %>;
    
    // Add helper functions
    function getNestedValue(obj, path) {
        return path.split(/[\[\].]+/).filter(p => p)
            .reduce((acc, part) => acc && acc[part], obj);
    }

    function setNestedValue(obj, path, value) {
        const parts = path.split(/[\[\].]+/).filter(p => p);
        let current = obj;
        
        for (let i = 0; i < parts.length - 1; i++) {
            const part = parts[i];
            current[part] = current[part] || {};
            current = current[part];
        }
        
        current[parts[parts.length - 1]] = value;
        return obj;
    }

    // Save handler with proper validation
    document.getElementById('saveReportBtn').addEventListener('click', () => {
        try {
            // Update report data from editable fields
            document.querySelectorAll('[contenteditable="true"]').forEach(element => {
                const fieldPath = element.dataset.field;
                if (!fieldPath) return; // Skip if no data field is defined
                
                const dataType = element.dataset.type || 'string';
                let value = element.textContent.trim();

                // Handle numeric fields
                if (dataType === 'number') {
                    const numericValue = Number(value);
                    if (isNaN(numericValue)) {
                        // Highlight the field with error
                        element.style.backgroundColor = "#ffdddd";
                        throw new Error(`Valeur numérique invalide pour ${fieldPath}`);
                    }
                    value = numericValue;
                }

                // Update data structure
                setNestedValue(reportData, fieldPath, value);
            });

            // Submit form
            document.getElementById('editedReportInput').value = JSON.stringify(reportData);
            document.getElementById('saveForm').submit();

            // Disable button during save
            const saveBtn = document.getElementById('saveReportBtn');
            saveBtn.disabled = true;
            saveBtn.innerHTML = '<i class="bi bi-arrow-repeat spin"></i> Sauvegarde...';
        } catch (error) {
            alert(error.message);
        }
    });

    // Add error/success messages handling
    <% if (success) { %>
        alert('<%= success %>');
    <% } %>
    <% if (error) { %>
        alert('Erreur: <%= error %>');
    <% } %>
</script>
</body>
</html>