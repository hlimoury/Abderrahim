<h1>Supermarché: <%= supermarket.nom %> (<%= supermarket.ville %>)</h1>

<!-- Store the original page number in a hidden element -->
<% if (typeof fromPage !== 'undefined' && fromPage) { %>
<input type="hidden" id="originalPage" value="<%= fromPage %>">
<% } else { %>
<input type="hidden" id="originalPage" value="1">
<% } %>

<!-- Button to add a new instance and view instance totals -->
<div class="mb-3">
  <a href="/supermarkets/<%= supermarket._id %>/ajouter-instance?fromPage=<%= fromPage || 1 %>" class="btn btn-primary">Ajouter Instance (Mois/Année)</a>
  <a href="/supermarkets/<%= supermarket._id %>/instances/totaux?fromPage=<%= fromPage || 1 %>" class="btn btn-info">Total Indicateurs</a>
  
  <!-- Return button that will be updated via JS -->
  <a href="/" id="returnButton" class="btn btn-secondary">Retour à la liste</a>
</div>

<!-- Search form for filtering instances by month and year -->
<form action="/supermarkets/<%= supermarket._id %>" method="GET" class="mb-3">
  <div class="form-inline">
    <input type="number" name="mois" class="form-control mr-2" placeholder="Mois" value="<%= mois || '' %>">
    <input type="number" name="annee" class="form-control mr-2" placeholder="Année" value="<%= annee || '' %>">
    <button type="submit" class="btn btn-primary">Filtrer Instances</button>
    
    <!-- Preserve the fromPage parameter when filtering -->
    <% if (typeof fromPage !== 'undefined' && fromPage) { %>
    <input type="hidden" name="fromPage" value="<%= fromPage %>">
    <% } %>
  </div>
</form>

<h2>Instances</h2>
<table class="table">
  <thead>
    <tr>
      <th>Mois</th>
      <th>Année</th>
      <th>Actions</th>
    </tr>
  </thead>
  <tbody>
    <% 
       // If a filter is applied, use the filtered instances passed via the route;
       // otherwise, default to supermarket.instances.
       const instancesToShow = instances || supermarket.instances;
       instancesToShow.forEach(function(instance) { 
    %>
      <tr>
        <td><%= instance.mois %></td>
        <td><%= instance.annee %></td>
        <td>
          <!-- Add fromPage parameter to all navigation links -->
          <a href="/supermarkets/<%= supermarket._id %>/instance/<%= instance._id %>/equipements?fromPage=<%= fromPage || 1 %>" class="btn btn-secondary btn-sm">Équipements</a>
          <a href="/supermarkets/<%= supermarket._id %>/instance/<%= instance._id %>/interpellations?fromPage=<%= fromPage || 1 %>" class="btn btn-success btn-sm">Interpellations</a>
          <a href="/supermarkets/<%= supermarket._id %>/instance/<%= instance._id %>/accidents?fromPage=<%= fromPage || 1 %>" class="btn btn-warning btn-sm">Accidents</a>
          <a href="/supermarkets/<%= supermarket._id %>/instance/<%= instance._id %>/incidents?fromPage=<%= fromPage || 1 %>" class="btn btn-danger btn-sm">Autres Incidents</a>
          <a href="/supermarkets/<%= supermarket._id %>/instance/<%= instance._id %>/formation?fromPage=<%= fromPage || 1 %>" class="btn btn-info btn-sm">Formation</a>
          <a href="/supermarkets/<%= supermarket._id %>/instance/<%= instance._id %>/drl?fromPage=<%= fromPage || 1 %>" class="btn btn-primary btn-sm">DRL</a>
          <a href="/supermarkets/<%= supermarket._id %>/instance/<%= instance._id %>/scoring?fromPage=<%= fromPage || 1 %>" class="btn btn-dark btn-sm">Scoring</a>
          <a href="/supermarkets/<%= supermarket._id %>/instance/editer/<%= instance._id %>?fromPage=<%= fromPage || 1 %>" class="btn btn-primary btn-sm">Modifier</a>
          <a href="/supermarkets/<%= supermarket._id %>/instance/supprimer/<%= instance._id %>?fromPage=<%= fromPage || 1 %>" class="btn btn-danger btn-sm"
             onclick="return confirm('Voulez-vous vraiment supprimer cette instance ?');">
            Supprimer
          </a>
        </td>
      </tr>
    <% }) %>
  </tbody>
</table>

<script>
  // Update the return button link when the page loads
  document.addEventListener('DOMContentLoaded', function() {
    const returnBtn = document.getElementById('returnButton');
    const originalPage = document.getElementById('originalPage').value;
    
    // Check if we have a fromPage value
    if (originalPage) {
      // Update the return link with the original page number
      returnBtn.href = `/?page=${originalPage}`;
      
      // Add search query if it exists in the URL
      const urlParams = new URLSearchParams(window.location.search);
      const searchQuery = urlParams.get('search');
      if (searchQuery) {
        returnBtn.href += `&search=${encodeURIComponent(searchQuery)}`;
      }
    }
  });
</script>